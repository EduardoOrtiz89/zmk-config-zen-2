/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        vim: vim {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON &kp W &kp ENTER>;
            label = "VIM";
        };

        copilot: copilot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(J)>;
            label = "COPILOT";
        };

        qvim: qvim {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON &kp Q &kp ENTER>;
            label = "QVIM";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB                     &kp SINGLE_QUOTE  &kp COMMA  &kp PERIOD  &kp P  &kp Y        &kp F    &kp G  &kp C     &kp R  &kp L  &kp BSPC
&mt LCTRL ESCAPE            &kp A             &kp O      &kp E       &kp U  &kp I        &kp D    &kp H  &kp T     &kp N  &kp S  &kp MINUS
&mt LSHFT LEFT_PARENTHESIS  &kp SEMICOLON     &kp Q      &kp J       &kp K  &kp X        &kp B    &kp M  &kp W     &kp V  &kp Z  &mt LS(RIGHT_SHIFT) RIGHT_PARENTHESIS
                                                         &kp LGUI    &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1          &kp N2        &kp N3        &kp N4        &kp N5          &kp N6     &kp N7    &kp N8    &kp N9     &kp N0     &kp DEL
&vim       &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT  &trans     &trans
&kp LSHFT  &bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &bootloader     &kp GRAVE  &trans    &trans    &trans     &kp SLASH  &trans
                                         &kp LGUI      &trans        &kp SPACE       &kp RET    &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL           &kp AT      &kp HASH      &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &ext_power EP_TOG  &bl BL_TOG  &bl BL_CYCLE  &trans    &trans       &copilot   &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &caps_word         &trans      &trans        &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &bootloader
                                          &kp LGUI      &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &rgb_ug RGB_TOG   &rgb_ug RGB_EFF    &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_HUI    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &ext_power EP_ON  &ext_power EP_OFF  &sys_reset       &trans           &trans             &trans  &trans  &trans  &trans  &trans  &trans
&trans  &out OUT_USB      &out OUT_BLE       &trans           &trans           &trans             &trans  &trans  &trans  &trans  &trans  &trans
                                             &trans           &trans           &trans             &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer3 {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };
};
